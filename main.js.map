{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/parse/parse-credential.service.ts","./src/app/parse/parse.interceptor.ts","./src/app/parse/parse.module.ts","./src/app/parse/parse.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\n\n\nconst routes: Routes = [\n  {path: 'settings', loadChildren: () => import('./settings/settings.module').then(m => m.SettingsModule)},\n  {path: 'audits', loadChildren: () => import('./audits/audits.module').then(m => m.AuditsModule)},\n  {path: '', pathMatch: 'full', component: HomeComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    paramsInheritanceStrategy: 'always',\n  })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SwUpdate} from '@angular/service-worker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'conserve';\n\n  constructor(private updates: SwUpdate) {\n  }\n\n  ngOnInit() {\n    this.updates.available.subscribe(() => {\n      if (confirm('A new app update is available. Do you want to install it? This will only take a second or two.')) {\n        this.updates.activateUpdate().then(() => document.location.reload());\n      }\n    });\n  }\n}\n","<div class=\"h-100 d-flex flex-column\">\n  <app-nav-bar></app-nav-bar>\n  <div class=\"flex-grow-1 overflow-auto\">\n    <router-outlet ></router-outlet>\n  </div>\n</div>\n<ngbx-toast-list top=\"4rem\"></ngbx-toast-list>\n","import {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {NgbCollapseModule, NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ToastModule} from 'ng-bootstrap-ext';\nimport {environment} from '../environments/environment';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {FormsModule as AppFormsModule} from './forms/forms.module';\nimport {NavBarComponent} from './nav-bar/nav-bar.component';\nimport {ParseModule} from './parse/parse.module';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    HomeComponent,\n  ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        NgbCollapseModule,\n        AppRoutingModule,\n        ParseModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n            // Register the ServiceWorker as soon as the app is stable\n            // or after 30 seconds (whichever comes first).\n            registrationStrategy: 'registerWhenStable:30000',\n        }),\n        ToastModule,\n    ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ParseCredentialService} from '../parse/parse-credential.service';\nimport {ParseCredentials} from '../parse/parse-credentials';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  profiles: Map<string, ParseCredentials>;\n\n  constructor(\n    private parseCredentialService: ParseCredentialService,\n  ) {\n    this.profiles = parseCredentialService.getProfiles();\n  }\n\n  ngOnInit(): void {\n  }\n\n  setActiveProfile(id: string) {\n    this.parseCredentialService.activeProfile = id;\n  }\n}\n","<div class=\"container h-100 d-flex align-items-center justify-content-center\">\n  <div class=\"text-center\">\n    <h1>Welcome to Conserve!</h1>\n    <h2>Select a Profile to work with:</h2>\n    <div class=\"list-group mb-3\">\n      <a\n        *ngFor=\"let profile of profiles | keyvalue\"\n        class=\"list-group-item list-group-item-action\"\n        routerLink=\"audits\"\n        (click)=\"setActiveProfile(profile.key)\"\n      >\n        <h3>{{ profile.value.name }}</h3>\n        <span class=\"text-muted\">\n          {{ profile.value.url }}\n        </span>\n      </a>\n    </div>\n    <a routerLink=\"settings\">\n      Edit Profiles in Settings\n    </a>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {Config} from '../audits/model/config.interface';\nimport {ParseService} from '../parse/parse.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss'],\n})\nexport class NavBarComponent implements OnInit, OnDestroy {\n  menuCollapsed: boolean = true;\n\n  config?: Config;\n\n  subscription?: Subscription;\n\n  constructor(\n    private parseService: ParseService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.subscription = this.parseService.getConfig$<Config>().subscribe(config => {\n      this.config = config;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container-fluid\">\n    <a *ngIf=\"config && config.brand\" class=\"navbar-brand\" [href]=\"config.brand.url\">\n      <img [src]=\"config.brand.logo\" height=\"32\" [alt]=\"config.brand.name\">\n      {{ config.brand.name }}\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" (click)=\"menuCollapsed = !menuCollapsed\">\n      &#9776;\n    </button>\n    <div [ngbCollapse]=\"menuCollapsed\" class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav me-auto\">\n        <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/audits\">Audits</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/settings\">Settings</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"https://github.com/Clashsoft/conserve.clashsoft.de\">\n            <i class=\"bi-github\"></i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ParseCredentials} from './parse-credentials';\n\nconst KEY_PREFIX = 'parse/profiles/';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ParseCredentialService {\n  #activeProfile?: string;\n  #credentials = new BehaviorSubject<ParseCredentials | undefined>(undefined);\n\n  constructor() {\n    let legacyProfile: ParseCredentials | undefined = undefined;\n    for (const property of ['url', 'appId', 'masterKey', 'sessionToken'] as const) {\n      const key = 'parse/' + property;\n      const value = localStorage.getItem(key);\n      if (value) {\n        legacyProfile ??= {url: '', appId: ''};\n        legacyProfile[property] = value;\n        localStorage.removeItem(key);\n      }\n    }\n\n    if (legacyProfile) {\n      this.saveProfile('legacy', legacyProfile);\n      this.activeProfile = 'legacy';\n    } else {\n      const activeId = localStorage.getItem('parse/profile');\n      if (activeId) {\n        this.#activeProfile = activeId;\n        const activeCredentials = this.getProfile(activeId);\n        if (activeCredentials) {\n          this.#credentials.next(activeCredentials);\n        }\n      }\n    }\n  }\n\n  get activeProfile(): string | undefined {\n    return this.#activeProfile;\n  }\n\n  set activeProfile(id: string | undefined) {\n    this.#activeProfile = id;\n    if (id) {\n      localStorage.setItem('parse/profile', id);\n      this.#credentials.next(this.getProfile(id));\n    } else {\n      localStorage.removeItem('parse/profile');\n      this.#credentials.next(undefined);\n    }\n  }\n\n  getProfile(id: string): ParseCredentials | undefined {\n    let value = localStorage.getItem(KEY_PREFIX + id);\n    return value ? JSON.parse(value) : undefined;\n  }\n\n  getProfiles(): Map<string, ParseCredentials> {\n    const profiles = new Map<string, ParseCredentials>();\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (!key || !key.startsWith(KEY_PREFIX)) {\n        continue;\n      }\n      const id = key.substring(KEY_PREFIX.length);\n      const value = localStorage.getItem(key);\n      if (!value) {\n        continue;\n      }\n\n      const profile = JSON.parse(value);\n      profiles.set(id, profile);\n    }\n    return profiles;\n  }\n\n  saveProfile(id: string, credentials: ParseCredentials) {\n    if (id === this.activeProfile) {\n      this.#credentials.next(credentials);\n    }\n    localStorage.setItem(KEY_PREFIX + id, JSON.stringify(credentials));\n  }\n\n  deleteProfile(id: string) {\n    localStorage.removeItem(KEY_PREFIX + id);\n  }\n\n  get credentials(): ParseCredentials | undefined {\n    return this.#credentials.value;\n  }\n\n  get credentials$(): Observable<ParseCredentials | undefined> {\n    return this.#credentials;\n  }\n\n  get appId(): string {\n    return this.#credentials.value?.appId || '';\n  }\n\n  get masterKey(): string {\n    return this.#credentials.value?.masterKey || '';\n  }\n\n  get sessionToken(): string {\n    return this.#credentials.value?.sessionToken || '';\n  }\n\n  get url(): string {\n    return this.#credentials.value?.url || '';\n  }\n\n  get url$(): Observable<string> {\n    return this.#credentials.pipe(map(p => p?.url || ''));\n  }\n}\n","import {HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ParseCredentialService} from './parse-credential.service';\nimport {ParseCredentials} from './parse-credentials';\n\n@Injectable()\nexport class ParseInterceptor implements HttpInterceptor {\n  constructor(\n    private parseCredentialService: ParseCredentialService,\n  ) {\n  }\n\n  buildHeaders(headers: HttpHeaders, credentials: ParseCredentials): HttpHeaders {\n    const {appId, masterKey, sessionToken} = credentials;\n    if (appId && !headers.has('X-Parse-Application-Id')) {\n      headers = headers.set('X-Parse-Application-Id', appId);\n    }\n    if (masterKey && !headers.has('X-Parse-Master-Key')) {\n      headers = headers.set('X-Parse-Master-Key', masterKey);\n    }\n    if (sessionToken && !headers.has('X-Parse-Session-Token')) {\n      headers = headers.set('X-Parse-Session-Token', sessionToken);\n    }\n    return headers;\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const credentials = this.parseCredentialService.credentials;\n    if (!credentials) {\n      return next.handle(req);\n    }\n\n    const {url} = credentials;\n    if (!req.url.startsWith(url)) {\n      return next.handle(req);\n    }\n\n    const headers = this.buildHeaders(req.headers, credentials);\n    const newReq = req.clone({headers});\n    return next.handle(newReq);\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {ParseInterceptor} from './parse.interceptor';\nimport {ParseService} from './parse.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [],\n  providers: [\n    ParseInterceptor,\n    ParseService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: ParseInterceptor,\n    },\n  ],\n})\nexport class ParseModule {\n}\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable, throwError} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\nimport {ParseCreateResponse, ParseResponse, ParseUpdateResponse} from '../audits/model/parse.interface';\nimport {ParseCredentialService} from './parse-credential.service';\nimport {ParseCredentials} from './parse-credentials';\nimport {ParseObject} from './parse-object.interface';\nimport {ParseInterceptor} from './parse.interceptor';\nimport {User} from './user.interface';\n\nexport interface FindOptions<T> {\n  keys?: readonly (keyof T)[];\n  limit?: number;\n  order?: (keyof T | `-${keyof T & string}`)[];\n}\n\n@Injectable()\nexport class ParseService {\n  constructor(\n    private http: HttpClient,\n    private parseCredentialService: ParseCredentialService,\n    private parseInterceptor: ParseInterceptor,\n  ) {\n  }\n\n  private get url(): string {\n    return this.parseCredentialService.url;\n  }\n\n  private getOptions(credentials?: ParseCredentials) {\n    if (!credentials) {\n      return {};\n    }\n    const headers = this.parseInterceptor.buildHeaders(new HttpHeaders(), credentials);\n    return {headers};\n  }\n\n  getConfig<T>(credentials = this.parseCredentialService.credentials): Observable<T> {\n    if (!credentials) {\n      return throwError('Invalid credentials');\n    }\n    return this.http.get<{ params: T }>(`${credentials.url}/config`, this.getOptions(credentials)).pipe(map(t => t.params));\n  }\n\n  getConfig$<T>(): Observable<T> {\n    return this.parseCredentialService.credentials$.pipe(switchMap(credentials => this.getConfig<T>(credentials)));\n  }\n\n  login(username: string, password: string, credentials = this.parseCredentialService.credentials): Observable<User> {\n    return this.http.get<User>(`${credentials?.url}/login`, {\n      ...this.getOptions(credentials),\n      params: {\n        username,\n        password,\n      },\n    });\n  }\n\n  getCurrentUser(credentials = this.parseCredentialService.credentials): Observable<User> {\n    return this.http.get<User>(`${credentials?.url}/users/me`, this.getOptions(credentials));\n  }\n\n  logout(credentials = this.parseCredentialService.credentials): Observable<void> {\n    return this.http.post<void>(`${credentials?.url}/logout`, {}, this.getOptions(credentials));\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<{ results: User[] }>(`${this.url}/users`).pipe(map(({results}) => results));\n  }\n\n  findAll<T>(className: string, where?: any, options: FindOptions<T> = {}): Observable<T[]> {\n    const params: Record<string, string> = {};\n    where && (params.where = JSON.stringify(where));\n    options.keys && (params.keys = options.keys.join(','));\n    options.limit && (params.limit = options.limit.toString());\n    options.order && (params.order = options.order.join(','));\n    return this.http.get<{ results: T[] }>(`${this.url}/classes/${className}`, {params}).pipe(map(r => r.results));\n  }\n\n  create<T extends ParseObject>(className: string, object: Omit<T, keyof ParseObject>): Observable<T> {\n    return this.http.post<ParseCreateResponse>(`${this.url}/classes/${className}`, object).pipe(\n      map(result => ({...object, ...result, updatedAt: result.createdAt} as T)),\n    );\n  }\n\n  update<T extends ParseObject>(className: string, objectId: string, object: any): Observable<ParseUpdateResponse> {\n    return this.http.put<ParseUpdateResponse>(`${this.url}/classes/${className}/${objectId}`, object);\n  }\n\n  updateAll<T extends ParseObject>(className: string, filter: Partial<T>, object: any) {\n    return this.findAll(className, filter, {keys: ['objectId']}).pipe(switchMap(objects => {\n      const requests = objects.map(obj => ({\n        method: 'PUT',\n        path: `/parse/classes/${className}/${obj.objectId}`,\n        body: object,\n      }));\n      return this.batch(requests);\n    }));\n  }\n\n  delete(className: string, objectId: string): Observable<void> {\n    return this.http.delete<void>(`${this.url}/classes/${className}/${objectId}`);\n  }\n\n  deleteAll<T extends ParseObject>(className: string, filter: Partial<T>) {\n    return this.findAll(className, filter, {keys: ['objectId']}).pipe(switchMap(objects => {\n      const requests = objects.map(obj => ({\n        method: 'DELETE',\n        path: `/parse/classes/${className}/${obj.objectId}`,\n      }));\n      return this.batch(requests);\n    }));\n  }\n\n  batch(requests: { path: string; method: string, body?: any }[]): Observable<ParseResponse[]> {\n    return this.http.post<ParseResponse[]>(`${this.url}/batch`, {requests});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}