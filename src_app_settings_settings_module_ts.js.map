{"version":3,"file":"src_app_settings_settings_module_ts.js","mappings":"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","sources":["./src/app/settings/edit-profile/edit-profile.component.ts","./src/app/settings/edit-profile/edit-profile.component.html","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings/settings.component.ts","./src/app/settings/settings/settings.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToastService} from 'ng-bootstrap-ext';\nimport {of} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\nimport {Config} from '../../audits/model/config.interface';\nimport {ParseCredentialService} from '../../parse/parse-credential.service';\nimport {ParseCredentials} from '../../parse/parse-credentials';\nimport {ParseService} from '../../parse/parse.service';\nimport {User} from '../../parse/user.interface';\n\nconst errorExplanations: Record<string, string> = {\n  403: 'Invalid credentials',\n  404: 'Invalid server URL.',\n  0: 'Can\\'t connect to server.',\n};\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss'],\n})\nexport class EditProfileComponent implements OnInit {\n  id!: string;\n  credentials: ParseCredentials = {appId: '', url: ''};\n\n  username = '';\n  password = '';\n  user?: User;\n\n  constructor(\n    private parseCredentialService: ParseCredentialService,\n    private parseService: ParseService,\n    private toastService: ToastService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.params.pipe(\n      tap(({id}) => this.id = id),\n      map(({id}) => this.parseCredentialService.getProfile(id)),\n      tap(credentials => credentials && (this.credentials = credentials)),\n      switchMap(c => c?.sessionToken ? this.parseService.getCurrentUser(c) : of(undefined)),\n    ).subscribe(user => {\n      this.user = user;\n    });\n  }\n\n  save(): void {\n    const id = this.id === 'new' ? Math.random().toString(36) : this.id;\n    this.parseCredentialService.saveProfile(id, this.credentials);\n    this.goBack();\n  }\n\n  delete(): void {\n    if (!confirm('Are you sure you want to delete this profile? This cannot be undone.')) {\n      return;\n    }\n\n    this.parseCredentialService.deleteProfile(this.id);\n    this.goBack();\n  }\n\n  private goBack() {\n    this.router.navigate(['../..'], {relativeTo: this.route});\n  }\n\n  test() {\n    this.parseService.getConfig<Config>(this.credentials).subscribe(config => {\n      if (config.brand) {\n        this.credentials.name ||= config.brand.name;\n        this.toastService.success('Parse Server', 'Successfully connected to Parse server.');\n      } else {\n        this.toastService.warn('Parse Server', 'Successfully connected to Parse server, but it is not configured correctly (brand parameter missing)');\n      }\n    }, error => {\n      console.error(error);\n      const explanation = error.error?.error ?? errorExplanations[error.status];\n      this.toastService.error('Parse Server', `Failed to connect to Parse server: ${explanation}`, error);\n    });\n  }\n\n  logout() {\n    this.parseService.logout(this.credentials).subscribe(() => {\n      delete this.user;\n      delete this.credentials.sessionToken;\n    }, error => {\n      this.toastService.error('Log out', 'Failed to log out', error);\n    });\n  }\n\n  login() {\n    if (!this.username || !this.password) {\n      return;\n    }\n\n    this.parseService.login(this.username, this.password, this.credentials).subscribe(user => {\n      this.user = user;\n      this.credentials.sessionToken = user.sessionToken;\n    }, error => {\n      this.toastService.error('Log in', 'Failed to log in', error);\n    });\n  }\n\n}\n","<div class=\"container\">\n  <h1>Edit Profile</h1>\n  <div class=\"mb-3\">\n    <div class=\"mb-3\">\n      <label for=\"name\" class=\"form-label\">Profile Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"credentials.name\">\n    </div>\n  </div>\n  <h2>Parse Server</h2>\n  <div class=\"mb-3\">\n    <div class=\"mb-3\">\n      <label for=\"url\" class=\"form-label\">Parse Server URL</label>\n      <input type=\"url\" class=\"form-control\" id=\"url\" [(ngModel)]=\"credentials.url\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"appId\" class=\"form-label\">Parse App ID</label>\n      <input type=\"text\" class=\"form-control\" id=\"appId\" [(ngModel)]=\"credentials.appId\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"masterKey\" class=\"form-label\">Parse Master Key (Optional)</label>\n      <input type=\"password\" class=\"form-control\" id=\"masterKey\" autocomplete=\"new-password\" [(ngModel)]=\"credentials.masterKey\">\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"test()\">\n      Test\n    </button>\n  </div>\n  <h2>User</h2>\n  <h4 *ngIf=\"user\">\n    Logged in as <b>{{user.username}}</b>.\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"logout()\">\n      Log out\n    </button>\n  </h4>\n  <div *ngIf=\"!user\" class=\"mb-3\">\n    <div class=\"mb-3\">\n      <label for=\"username\" class=\"form-label\">Username</label>\n      <input type=\"text\" class=\"form-control\" id=\"username\" autocomplete=\"username\" [(ngModel)]=\"username\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" autocomplete=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"login()\">\n      Log in\n    </button>\n  </div>\n  <button type=\"button\" class=\"btn btn-primary me-2\" (click)=\"save()\">\n    Save\n  </button>\n  <button *ngIf=\"id !== 'new'\" type=\"button\" class=\"btn btn-danger me-2\" (click)=\"delete()\">\n    Delete\n  </button>\n  <a class=\"btn btn-secondary\" routerLink=\"../..\">\n    Cancel\n  </a>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {EditProfileComponent} from './edit-profile/edit-profile.component';\nimport {SettingsComponent} from './settings/settings.component';\n\nconst routes: Routes = [\n  {path: 'profiles/:id', component: EditProfileComponent},\n  {path: '', component: SettingsComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CompanycamModule} from '../companycam/companycam.module';\nimport {EditProfileComponent} from './edit-profile/edit-profile.component';\n\nimport {SettingsRoutingModule} from './settings-routing.module';\nimport {SettingsComponent} from './settings/settings.component';\n\n\n@NgModule({\n  declarations: [\n    SettingsComponent,\n    EditProfileComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SettingsRoutingModule,\n    CompanycamModule,\n  ],\n})\nexport class SettingsModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ToastService} from 'ng-bootstrap-ext';\nimport {CompanycamCredentialService} from '../../companycam/companycam-credential.service';\nimport {CompanycamService} from '../../companycam/companycam.service';\nimport {ParseCredentialService} from '../../parse/parse-credential.service';\nimport {ParseCredentials} from '../../parse/parse-credentials';\n\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent implements OnInit {\n  profiles!: Map<string, ParseCredentials>;\n  activeProfile?: string;\n\n  companycamApiKey!: string;\n\n  constructor(\n    private parseCredentialService: ParseCredentialService,\n    private companycamCredentialService: CompanycamCredentialService,\n    private toastService: ToastService,\n    private companycamService: CompanycamService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.profiles = this.parseCredentialService.getProfiles();\n    this.activeProfile = this.parseCredentialService.activeProfile;\n    this.companycamApiKey = this.companycamCredentialService.apiKey;\n  }\n\n  setActiveProfile(id: string) {\n    this.activeProfile = id;\n    this.parseCredentialService.activeProfile = id;\n  }\n\n  saveCompanycam() {\n    this.companycamCredentialService.apiKey = this.companycamApiKey;\n  }\n\n  testCompanycam() {\n    this.saveCompanycam();\n    this.companycamService.test(this.companycamApiKey).subscribe(user => {\n      this.toastService.success('Companycam', `Logged in as ${user.first_name} ${user.last_name}`);\n    }, error => {\n      this.toastService.error('Companycam', 'Failed to log in', error);\n    });\n  }\n}\n","<div class=\"container\">\n  <h1>Settings</h1>\n  <h2 class=\"d-flex align-items-center\">\n    Parse Server Profiles\n    <a class=\"btn btn-success bi-plus-circle ms-auto\" [routerLink]=\"['profiles', 'new']\">\n      Add\n    </a>\n  </h2>\n  <ul class=\"list-group mb-3\">\n    <li\n      *ngFor=\"let profile of profiles | keyvalue\"\n      class=\"list-group-item d-flex align-items-center\"\n    >\n      <div class=\"me-auto\">\n        {{ profile.value.name }}\n        <span class=\"text-muted\">\n          {{ profile.value.url }}\n        </span>\n      </div>\n      <button *ngIf=\"profile.key === activeProfile\" class=\"btn btn-outline-secondary bi-check-circle\" disabled>\n        Active\n      </button>\n      <button class=\"btn btn-primary bi-check-circle ms-2\" *ngIf=\"profile.key !== activeProfile\" (click)=\"setActiveProfile(profile.key)\">\n        Select\n      </button>\n      <a class=\"btn btn-secondary bi-pencil ms-2\" [routerLink]=\"['profiles', profile.key]\">\n        Edit\n      </a>\n    </li>\n  </ul>\n  <h2>CompanyCam</h2>\n  <div class=\"mb-3\">\n    <div class=\"mb-3\">\n      <label for=\"companyCamApiKeyInput\" class=\"form-label\">API Key</label>\n      <input type=\"password\" class=\"form-control\" id=\"companyCamApiKeyInput\" autocomplete=\"off\" [(ngModel)]=\"companycamApiKey\">\n    </div>\n    <button type=\"button\" class=\"btn btn-primary me-2\" (click)=\"saveCompanycam()\">\n      Save\n    </button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"testCompanycam()\">\n      Test\n    </button>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}